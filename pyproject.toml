[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[project]
authors = [{name = "Vitor Shen"}]
license = {file = "LICENSE"}
name = "gluex-nstar"
readme = "README.md"
requires-python = ">=3.12"
version = "0.1.0"

[dependency-groups]
dev = [
    "ruff",
    "sphinx-autobuild",
    {include-group = "doc"},
    {include-group = "jupyter"},
    {include-group = "test"},
]
doc = [
    "myst-nb",
    "sphinx-book-theme",
    "sphinx-comments",
    "sphinx-copybutton",
    {include-group = "notebooks"},
]
jupyter = [
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-git",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "python-lsp-ruff",
    "python-lsp-server[rope]",
    {include-group = "notebooks"},
]
notebooks = [
    "ampform",
    "ampform-dpd",
    "ipympl",
    "ipywidgets",
    "matplotlib",
    "qrules[viz]",
    "tensorwaves[jax,pwa]",
]
test = [
    "nbmake",
    {include-group = "notebooks"},
]

[tool.ruff]
extend-include = ["*.ipynb"]
preview = true
show-fixes = true

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = [
    "ANN401",
    "COM812",
    "CPY001",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "DOC",
    "E501",
    "FURB101",
    "FURB103",
    "FURB140",
    "G004",
    "ISC001",
    "PLW1514",
    "PT001",
    "PTH",
    "SIM108",
]
preview = true
select = ["ALL"]
task-tags = ["cspell"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["display"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "ANN",
    "B018",
    "C408",
    "C90",
    "D",
    "E303",
    "E703",
    "N806",
    "N816",
    "PLC2401",
    "PLC2701",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "RUF001",
    "S101",
    "T20",
    "TC00",
    "TCH",
]
"docs/*" = [
    "INP001",
    "S101",
    "S113",
]
"docs/conf.py" = [
    "D100",
    "INP001",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.tox.env_run_base",
]
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
env_list = [
    "cov",
    "docnb-force",
    "linkcheck",
    "sty",
]
no_package = true
requires = ["tox>=4.21.0"]
skip_install = true
skip_missing_interpreters = true

[tool.tox.env_run_base]
pass_env = ["*"]

[tool.tox.env.doc]
allowlist_externals = ["sphinx-build"]
commands = [
    [
        "sphinx-build",
        "--builder=html",
        "--fail-on-warning",
        "--keep-going",
        "--show-traceback",
        "docs/",
        "docs/_build/html",
    ],
]
description = "Build documentation and API through Sphinx"
set_env.PYTHONWARNINGS = ""

[tool.tox.env.doclive]
allowlist_externals = ["sphinx-autobuild"]
commands = [
    [
        "sphinx-autobuild",
        "--builder=html",
        "--ignore=docs/_build/",
        "--ignore=docs/_images/",
        "--ignore=docs/api/",
        "--open-browser",
        "--port=0",
        "--re-ignore='.*/__pycache__/.*'",
        "--re-ignore='.*/.ipynb_checkpoints/.*'",
        "--re-ignore='.*/.virtual_documents/.*'",
        "--re-ignore='.*\\.csv'",
        "--re-ignore='.*\\.gif'",
        "--re-ignore='.*\\.gitignore'",
        "--re-ignore='.*\\.gv'",
        "--re-ignore='.*\\.inv'",
        "--re-ignore='.*\\.json'",
        "--re-ignore='.*\\.pickle'",
        "--re-ignore='.*\\.png'",
        "--re-ignore='.*\\.svg'",
        "--re-ignore='.*\\.tmp'",
        "--re-ignore='.*\\.ya?ml'",
        "--watch=docs",
        "--watch=src",
        "docs/",
        "docs/_build/html",
    ],
]
description = "Set up a server to directly preview changes to the HTML pages"
set_env.PYTHONWARNINGS = ""

[tool.tox.env.docnb]
base = ["tool.tox.env.doc", "tool.tox.env_run_base"]
description = "{[tool.tox.env.doc]description} with cached notebook execution"
set_env = [
    {replace = "ref", of = ["tool.tox.env.doc.set_env"]},
    {EXECUTE_NB = "yes"},
]

[tool.tox.env.docnb-force]
base = ["tool.tox.env.doc", "tool.tox.env_run_base"]
description = "{[tool.tox.env.doc]description} with notebook execution (no cache)"
set_env = [
    {replace = "ref", of = ["tool.tox.env.doc.set_env"]},
    {FORCE_EXECUTE_NB = "yes"},
]

[tool.tox.env.docnblive]
base = ["tool.tox.env.doclive", "tool.tox.env_run_base"]
description = "{[tool.tox.env.doclive]description} with cached notebook execution"
set_env = [
    {replace = "ref", of = ["tool.tox.env.doclive.set_env"]},
    {EXECUTE_NB = "yes"},
]

[tool.tox.env.linkcheck]
allowlist_externals = ["sphinx-build"]
commands = [
    [
        "sphinx-build",
        "--builder=linkcheck",
        "--show-traceback",
        "docs/",
        "docs/_build/linkcheck",
    ],
]
description = "Check external links in the documentation (requires internet connection)"

[tool.tox.env.nb]
allowlist_externals = ["pytest"]
commands = [["pytest", "--nbmake", "{posargs:docs}"]]
description = "Run all notebooks with pytest"

[tool.tox.env.sty]
allowlist_externals = ["pre-commit"]
commands = [["pre-commit", "run", "--all-files", {replace = "posargs", extend = true}]]
description = "Perform all linting, formatting, and spelling checks"
